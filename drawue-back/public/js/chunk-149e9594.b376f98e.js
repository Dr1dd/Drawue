(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-149e9594"],{"73f1":function(s,r,e){"use strict";e.r(r);var a=function(){var s=this,r=s.$createElement,e=s._self._c||r;return e("div",{staticClass:"reset-container"},[e("div",{staticClass:"reset-module"},[e("div",{staticClass:"module-header"},[s._v(" Reset Password ")]),e("div",{staticClass:"module-form--wrapper"},[""!=s.message?e("div",{staticClass:"response-message"},[e("div",[s._v(" "+s._s(s.message)+" ")]),e("router-link",{attrs:{to:"/"}},[e("div",{staticClass:"btn"},[s._v("Go Home")])])],1):e("div",{staticClass:"input-container"},[e("input",{directives:[{name:"model",rawName:"v-model.lazy",value:s.$v.password.$model,expression:"$v.password.$model",modifiers:{lazy:!0}}],attrs:{type:"password",placeholder:"Password"},domProps:{value:s.$v.password.$model},on:{blur:function(r){return s.$v.password.$touch()},change:function(r){return s.$set(s.$v.password,"$model",r.target.value)}}}),e("transition",{attrs:{name:"fade"}},[s.$v.password.$dirty&&!s.$v.password.required?e("div",{staticClass:"error"},[s._v("Field is required")]):s.$v.password.$dirty&&!s.$v.password.strongPassword?e("div",{staticClass:"error"},[s._v("Strong passwords need to have a letter, a number, a special character, and be atleast 8 characters long.")]):s.$v.password.$dirty&&!s.$v.password.maxLength?e("div",{staticClass:"error"},[s._v(" Your password should not exceed "+s._s(s.$v.password.$params.maxLength.max)+" characters ")]):s.backendError["errorMessage"]?e("div",{staticClass:"error"},[s._v(" "+s._s(s.backendError["errorMessage"])+" ")]):s._e()]),e("input",{directives:[{name:"model",rawName:"v-model.lazy",value:s.$v.passwordConfirm.$model,expression:"$v.passwordConfirm.$model",modifiers:{lazy:!0}}],attrs:{type:"password",placeholder:"Confirm Password"},domProps:{value:s.$v.passwordConfirm.$model},on:{blur:function(r){return s.$v.passwordConfirm.$touch()},change:function(r){return s.$set(s.$v.passwordConfirm,"$model",r.target.value)}}}),e("transition",{attrs:{name:"fade"}},[s.$v.passwordConfirm.$dirty&&!s.$v.passwordConfirm.required?e("div",{staticClass:"error"},[s._v("Field is required")]):s.$v.passwordConfirm.$dirty&&!s.$v.passwordConfirm.sameAsPassword?e("div",{staticClass:"error"},[s._v("The passwords do not match.")]):s.backendError["passConfirm"]?e("div",{staticClass:"error"},[s._v(" "+s._s(s.backendError["passConfirm"])+" ")]):s._e()]),e("div",{staticClass:"btn",on:{click:s.resetPassword}},[s._v("Reset Password")])],1)])])])},t=[],o=e("bc3a"),d=e.n(o),n=e("b5ae"),i={name:"Reset",data:function(){return{password:"",passwordConfirm:"",backendError:"",tokenValid:!1,message:""}},validations:{password:{required:n["required"],strongPassword:function(s){return/[a-z]/.test(s)&&/[0-9]/.test(s)&&/\W|_/.test(s)&&s.length>=8},maxLength:Object(n["maxLength"])(100)},passwordConfirm:{required:n["required"],sameAsPassword:Object(n["sameAs"])("password")}},methods:{resetPassword:function(){var s=this;if(this.$v.$touch(),!this.$v.$invalid){var r=this.$route.query.tkn,e=this.password,a=this.passwordConfirm;d.a.post("/api/auth/account-recovery/reset",{token:r,password:e,confirmPassword:a},{}).then((function(r){r.data&&(s.message=r.data.success)})).catch((function(r){s.backendError=r.response.data}))}}},mounted:function(){var s=this,r=this.$route.query.tkn;64!=r.length?this.message="Password reset token is invalid or has expired.":d.a.post("/api/auth/account-recovery/valid",{token:r},{}).then((function(){})).catch((function(r){s.message=r.response.data.errorMessage}))}},c=i,v=(e("c8bc"),e("2877")),l=Object(v["a"])(c,a,t,!1,null,null,null);r["default"]=l.exports},c8bc:function(s,r,e){"use strict";var a=e("fb5a"),t=e.n(a);t.a},fb5a:function(s,r,e){}}]);
//# sourceMappingURL=chunk-149e9594.b376f98e.js.map